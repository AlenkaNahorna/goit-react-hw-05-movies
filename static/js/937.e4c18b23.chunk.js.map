{"version":3,"file":"static/js/937.e4c18b23.chunk.js","mappings":"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","sources":["api/customAxios.js","constants/constantsApi.js","api/getMovieInfo.js","pages/MovieDetails/MovieDetails.styled.js","components/MovieInfo/MovieInfo.styled.js","utils/movieDataNormaliz.js","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.staled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/constantsApi';\n\nexport const customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'e98b0e0d9b862c3ddb556a3bb2ced479';\n","import { customAxios } from './customAxios';\nimport { toast } from 'react-toastify';\n\nexport const getMovieInfo = async id => {\n  try {\n    const response = await customAxios.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error(`Sorry, something went wrong ${error}`);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const MovieItem = styled.li`\n  color: ${p => p.theme.colors.primaryColor};\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieInfoCard = styled.div`\n  display: flex;\n  max-width: 800px;\n  margin-bottom: ${p => p.theme.space.l};\n  color: ${p => p.theme.colors.primaryColor};\n`;\n\nexport const MovieInfoPoster = styled.img`\n  display: block;\n  width: 200px;\n  margin-right: ${p => p.theme.space.l};\n`;\n\nexport const MovieInfoTitle = styled.h3`\n  margin-bottom: ${p => p.theme.space.ml};\n  color: ${p => p.theme.colors.secondaryColorBlue};\n`;\n\nexport const MovieInfoBlock = styled.div`\n  margin-bottom: ${p => p.theme.space.ml};\n  color: ${p => p.theme.colors.primaryColor};\n`;\n","export const releaseDataNormalize = value => {\n  const releaseYear = value.slice(0, 4);\n  return releaseYear;\n};\n\nexport const ratingNormalize = value => {\n  const voteRating = value * 10;\n  return voteRating.toFixed(1) + '%';\n};\n","import {\n  MovieInfoCard,\n  MovieInfoPoster,\n  MovieInfoTitle,\n  MovieInfoBlock,\n} from './MovieInfo.styled';\nimport { ratingNormalize, releaseDataNormalize } from 'utils/movieDataNormaliz';\n\nexport const MovieInfo = ({ movie }) => {\n  return (\n    <MovieInfoCard>\n      <MovieInfoPoster\n        src={\n          movie.poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + movie.poster_path\n            : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png'\n        }\n        alt=\"\"\n        width=\"100px\"\n      />\n      <div>\n        <MovieInfoTitle>\n          {movie.title}\n          {'  '}\n          <span>({releaseDataNormalize(movie.release_date)})</span>\n        </MovieInfoTitle>\n        <MovieInfoBlock>\n          Rating: <span>{ratingNormalize(movie.vote_average)}</span>\n        </MovieInfoBlock>\n        <MovieInfoBlock>Overview: {movie.overview}</MovieInfoBlock>\n        <MovieInfoBlock>\n          Genres:\n          <ul>\n            {movie.genres.map(genre => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n          </ul>\n        </MovieInfoBlock>\n      </div>\n    </MovieInfoCard>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 180px;\n  margin-bottom: 40px;\n  padding: ${p => p.theme.space.m};\n  color: ${p => p.theme.colors.primaryColor};\n  background-color: #dde1e7;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 2px 2px 5px #babecc, -5px -5px 10px #ffffff73;\n  transition: color 250ms ease-in-out;\n  :hover {\n    color: ${p => p.theme.colors.secondaryColorBlue};\n  }\n`;\n\nexport const BackLinkIcon = styled(TiArrowBackOutline)`\n  width: 20px;\n  height: 20px;\n  margin-right: ${p => p.theme.space.ml};\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieInfo } from 'api/getMovieInfo';\nimport { MovieItem } from './MovieDetails.styled';\nimport { MovieInfoBlock } from '../../components/MovieInfo/MovieInfo.styled';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport {\n  BackLink,\n  BackLinkIcon,\n} from '../../components/BackLink/BackLink.staled';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { Box } from 'styles/Box';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState();\n  const location = useLocation().state?.from ?? '/';\n\n  useEffect(() => {\n    async function onMovieInfo() {\n      try {\n        const { data } = await getMovieInfo(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        toast.info(`Something went wrong ${error}`);\n      }\n    }\n    onMovieInfo();\n  }, [movieId]);\n\n  return (\n    <Box max-width=\"768px\">\n      <BackLink to={location}>\n        <BackLinkIcon />\n        Go Back\n      </BackLink>\n      {movieInfo && (\n        <div>\n          <MovieInfo movie={movieInfo} />\n          <MovieInfoBlock>Addictional information:</MovieInfoBlock>\n          <ul>\n            <MovieItem>\n              <Link to=\"credits\" state={{ from: location }}>\n                Cast\n              </Link>\n            </MovieItem>\n            <MovieItem>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </MovieItem>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["customAxios","axios","baseURL","params","api_key","getMovieInfo","id","response","toast","MovieItem","styled","p","theme","colors","primaryColor","MovieInfoCard","space","l","MovieInfoPoster","MovieInfoTitle","ml","secondaryColorBlue","MovieInfoBlock","ratingNormalize","value","toFixed","MovieInfo","movie","src","poster_path","alt","width","title","release_date","slice","vote_average","overview","genres","map","genre","name","BackLink","Link","m","radii","normal","BackLinkIcon","TiArrowBackOutline","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","state","from","useEffect","data","onMovieInfo","Box","to","Suspense","fallback","Loader"],"sourceRoot":""}